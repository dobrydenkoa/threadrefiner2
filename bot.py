# bot.py
import os
import logging
from telegram import Update, Message
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters
from utils.mistral_client import ask_mistral
from utils.telegram_user_client import get_last_24h_messages, client

from dotenv import load_dotenv
load_dotenv()

logging.basicConfig(level=logging.INFO)

async def handle_forwarded_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message: Message = update.message

    if not message.forward_from_chat:
        await message.reply_text("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ—Å–ª–∞–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –∑ —á–∞—Ç—É.")
        return

    chat_id = message.forward_from_chat.id
    await message.reply_text("üì• –û—Ç—Ä–∏–º–∞–Ω–æ. –ó–±–∏—Ä–∞—é —ñ—Å—Ç–æ—Ä—ñ—é —á–∞—Ç—É –∑–∞ 24 –≥–æ–¥–∏–Ω–∏...")

    try:
        json_history = await get_last_24h_messages(chat_id)
        await message.reply_text("‚úÖ –Ü—Å—Ç–æ—Ä—ñ—é –∑—ñ–±—Ä–∞–Ω–æ. –í—ñ–¥–ø—Ä–∞–≤–ª—è—é –≤ Mistral...")

        reply = ask_mistral(
            f"–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —ñ—Å—Ç–æ—Ä—ñ—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ü—å–æ–≥–æ —á–∞—Ç—É –∑–∞ 24 –≥–æ–¥–∏–Ω–∏:\n{json_history}"
        )
        await message.reply_text(f"üß† –í—ñ–¥–ø–æ–≤—ñ–¥—å Mistral:\n\n{reply}")

    except Exception as e:
        await message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.FORWARDED & filters.TEXT, handle_forwarded_message))
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    app.run_polling()

